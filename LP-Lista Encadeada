class No:
  def __init__(self, data):
        self.data = data
        self.nextNo = None
    
    def getData(self):
        return self.data
    
    def setData(self,data):
        self.data=data
    
    def getNextNo(self):
        return self.nextNo
        
    def setNextNo(self,newNo):
        self.nextNo = newNo;
    
    
class List:
    def __init__(self):
        self.firstNo = None
        self.lastNo = None
            
    def inseririnicio(self, value):
        newNo = No (value)
        if self.isEmpty():
            self.firstNo = self.lastNo = newNo
        else:               
            newNo.setNextNo(self.firstNo)
            self.firstNo = newNo
    
    def inserirfinal(self, value):
        newNo = No(value)
        if self.isEmpty(): 
            self.firstNo = self.lastNo = newNo
        else:
            self.lastNo.setNextNo(newNo)
            self.lastNo=newNo
            
    def removerinicio(self):
        if self.isEmpty():
            raise IndexError 
        firstNoValue = self.firstNo.getData()
        if self.firstNo is self.lastNo:
            self.firstNo = self.lastNo = None
        else:
            self.firstNo = self.firstNo.getNextNo()
        return firstNoValue
        
    def removerfinal(self):
        if self.isEmpty():
            raise IndexError 
        lastNoValue = self.lastNo.getData()
        if self.firstNo is self.lastNo:
            self.firstNo=self.lastNo=None
        else:
            currentNo = self.firstNo
            while currentNo.getNextNo() is not self.lastNo:
                currentNo = currentNo.getNextNo()
            currentNo.setNextNo(None)
            self.lastNo = currentNo
        return lastNoValue
    

class Fila( List ):
    def push(self,data):
        self.inseririnicio(data)
    def pop(self):
        self.removerinicio()
    def empty(self):
           

class Pilha( List):
    def empilha(self):
        return self.inseririnicio(data)
    def desempilha(self):
        return self.removerfinal()
    def empty(self):
       
